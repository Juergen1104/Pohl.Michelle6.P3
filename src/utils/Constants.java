package utils;

//NICHT BEARBEITEN
public class Constants {
	public static final int TILE_SIZE = 16;      // Größe eines Spielfeld-Tiles in Pixeln
	public static final int WIDTH = 28;          // Spielfeldbreite in Tiles
	public static final int HEIGHT = 31;         // Spielfeldhöhe in Tiles
	public static final int MAX_SCORE = 300;     // Maximale Punktzahl zum Gewinnen
	public static final int GAME_SPEED = 6;      // Spielgeschwindigkeit (höher = schneller)
	public static final int MOVE_DELAY = 200;    // Mindestzeit (ms) zwischen zwei Bewegungen


	public static final Type[][] INITIAL_MAZE = {
			{Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL},
			{Type.WALL, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.WALL},
			{Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL},
			{Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL},
			{Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL},
			{Type.WALL, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.WALL},
			{Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL},
			{Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL},
			{Type.WALL, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.WALL},
			{Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL},
			{Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL},
			{Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL},
			{Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL},
			{Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.DOT, Type.EMPTY, Type.EMPTY, Type.EMPTY, Type.EMPTY, Type.EMPTY, Type.EMPTY, Type.DOT, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL},
			{Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT},
			{Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL},
			{Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL},
			{Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL},
			{Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL},
			{Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL},
			{Type.WALL, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.WALL},
			{Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL},
			{Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL},
			{Type.WALL, Type.DOT, Type.DOT, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.DOT, Type.DOT, Type.WALL},
			{Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL},
			{Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL},
			{Type.WALL, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.WALL},
			{Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL},
			{Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.DOT, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.DOT, Type.WALL},
			{Type.WALL, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.DOT, Type.WALL},
			{Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL, Type.WALL}
	};	
}